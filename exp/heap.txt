house of force - 
  works against glibc < 2.29 (no top chunk size integrity checks)
  overwrite the top chunk's size descriptor so we can allocate to an address we want to overwrite (possibly wrapping around back to the binary)
  
  code execution, we could possibly overwrite malloc hook --> __malloc_hook so that when malloc is called, it executes at the address we wrote in.


fastbins double free -
  malloc free() sets up lists of free'd chunks based on size for recycled use (faster access)
  these free lists are called fastbins (or buckets)
  singly linked non circular list, each holds free chunks of the specified size.  
  
  a = malloc(1) allocates a chunk of size 0x20
  free(a) - free's the allocated chunk and puts it in fastbins for recycled use on the next allocation of a chunk with 0x20 size
  
 at this point, fastbins shows as this 
  0x20 - <addr_of_a> -> 0x0      (linked list) 
  0x30 -
  0x40 - 
  0x50 - 
  0x60 - 
  0x70 - 
  0x80 - 
  
  
  
  
