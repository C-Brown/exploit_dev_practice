This is an interesting overflow where we use two inputs to manipulate where a null byte needs to be in our buffers.  

The username is overflowable through our password buffer and beyond the return address.  But there are length checks and I need to find a way to bypass the length check.

The bounds checking stores the minimum and maximum length of the password at bytes 
18 and 19 of the username (overflow).  Surprisingly, the output states that BOTH need to be between 8 and 16 characters, but only checks the password length. 

After the password length check passes, it checks that there is no overflow up to the return address by checking for a null byte at the 18th byte into the password overflow. 

Since we can overflow into the bounds checking numbers with the username, we can set the maximum pw length to 0xff and the minimum pw length to 0x01.
This allows me to overflow password as well.  This input does not handle null bytes but since it places a null at the end of the input, I just overflow the password to 17 bytes 
and the 18th byte will be a null to bypass the overflow check. 

Since the username can write beyond the password overflow and is strcpy'd first.. I can overflow beyond the password overflow to continue writing passed the password's null and in to the return addr.


That leaves me with:

username:   414141414141414141414141414141414101ff42424242424242424242424242424242424242424242424a44
            A * 17                    filler to the bounds checking values
            01                        min pw len
            ff                        max pw len
            B * 23                    filler to get to the return address
            4a44                      return address to unlock_door (endianness puts it at 444a)

password:  4343434343434343434343434343434343
           B * 17

In memory, it looks like this  (password in [ ]  while username is the surrounding values) notice the null byte at the end of the password

4141414141414141414141414141414141 01ff [4343434343434343434343434343434343 00] 4242424242 4a44
